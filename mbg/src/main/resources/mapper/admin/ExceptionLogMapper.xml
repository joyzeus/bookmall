<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jay.book.module.admin.dao.ExceptionLogMapper">
  <resultMap id="BaseResultMap" type="com.jay.book.module.admin.entity.ExceptionLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="exception_type" jdbcType="VARCHAR" property="exceptionType" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="create_userid" jdbcType="INTEGER" property="createUserid" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="view" jdbcType="TINYINT" property="view" />
    <result column="view_time" jdbcType="TIMESTAMP" property="viewTime" />
    <result column="view_userid" jdbcType="INTEGER" property="viewUserid" />
    <result column="resolve" jdbcType="BIT" property="resolve" />
    <result column="resolve_time" jdbcType="TIMESTAMP" property="resolveTime" />
    <result column="resolve_userid" jdbcType="INTEGER" property="resolveUserid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jay.book.module.admin.entity.ExceptionLog">
    <result column="exception_msg" jdbcType="LONGVARCHAR" property="exceptionMsg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, class_name, method_name, exception_type, ip, create_userid, addtime, view, view_time, 
    view_userid, resolve, resolve_time, resolve_userid
  </sql>
  <sql id="Blob_Column_List">
    exception_msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from exception_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exception_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jay.book.module.admin.entity.ExceptionLog">
    insert into exception_log (id, class_name, method_name, 
      exception_type, ip, create_userid, 
      addtime, view, view_time, 
      view_userid, resolve, resolve_time, 
      resolve_userid, exception_msg)
    values (#{id,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{exceptionType,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{createUserid,jdbcType=INTEGER}, 
      #{addtime,jdbcType=TIMESTAMP}, #{view,jdbcType=TINYINT}, #{viewTime,jdbcType=TIMESTAMP}, 
      #{viewUserid,jdbcType=INTEGER}, #{resolve,jdbcType=BIT}, #{resolveTime,jdbcType=TIMESTAMP}, 
      #{resolveUserid,jdbcType=INTEGER}, #{exceptionMsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jay.book.module.admin.entity.ExceptionLog">
    insert into exception_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="exceptionType != null">
        exception_type,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="createUserid != null">
        create_userid,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="view != null">
        view,
      </if>
      <if test="viewTime != null">
        view_time,
      </if>
      <if test="viewUserid != null">
        view_userid,
      </if>
      <if test="resolve != null">
        resolve,
      </if>
      <if test="resolveTime != null">
        resolve_time,
      </if>
      <if test="resolveUserid != null">
        resolve_userid,
      </if>
      <if test="exceptionMsg != null">
        exception_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="exceptionType != null">
        #{exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="view != null">
        #{view,jdbcType=TINYINT},
      </if>
      <if test="viewTime != null">
        #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewUserid != null">
        #{viewUserid,jdbcType=INTEGER},
      </if>
      <if test="resolve != null">
        #{resolve,jdbcType=BIT},
      </if>
      <if test="resolveTime != null">
        #{resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolveUserid != null">
        #{resolveUserid,jdbcType=INTEGER},
      </if>
      <if test="exceptionMsg != null">
        #{exceptionMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jay.book.module.admin.entity.ExceptionLog">
    update exception_log
    <set>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="exceptionType != null">
        exception_type = #{exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createUserid != null">
        create_userid = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=TINYINT},
      </if>
      <if test="viewTime != null">
        view_time = #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewUserid != null">
        view_userid = #{viewUserid,jdbcType=INTEGER},
      </if>
      <if test="resolve != null">
        resolve = #{resolve,jdbcType=BIT},
      </if>
      <if test="resolveTime != null">
        resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolveUserid != null">
        resolve_userid = #{resolveUserid,jdbcType=INTEGER},
      </if>
      <if test="exceptionMsg != null">
        exception_msg = #{exceptionMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jay.book.module.admin.entity.ExceptionLog">
    update exception_log
    set class_name = #{className,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      exception_type = #{exceptionType,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      create_userid = #{createUserid,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      view = #{view,jdbcType=TINYINT},
      view_time = #{viewTime,jdbcType=TIMESTAMP},
      view_userid = #{viewUserid,jdbcType=INTEGER},
      resolve = #{resolve,jdbcType=BIT},
      resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      resolve_userid = #{resolveUserid,jdbcType=INTEGER},
      exception_msg = #{exceptionMsg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jay.book.module.admin.entity.ExceptionLog">
    update exception_log
    set class_name = #{className,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      exception_type = #{exceptionType,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      create_userid = #{createUserid,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      view = #{view,jdbcType=TINYINT},
      view_time = #{viewTime,jdbcType=TIMESTAMP},
      view_userid = #{viewUserid,jdbcType=INTEGER},
      resolve = #{resolve,jdbcType=BIT},
      resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      resolve_userid = #{resolveUserid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="base_query">
    <trim prefix="WHERE" prefixOverrides="AND | OR">
      <if test="null != id">
         and t.id = #{id,jdbcType=INTEGER}
      </if>
      <if test="null != className">
         and t.class_name = #{className,jdbcType=VARCHAR}
      </if>
      <if test="null != methodName">
         and t.method_name = #{methodName,jdbcType=VARCHAR}
      </if>
      <if test="null != exceptionType">
         and t.exception_type = #{exceptionType,jdbcType=VARCHAR}
      </if>
      <if test="null != ip">
         and t.ip = #{ip,jdbcType=VARCHAR}
      </if>
      <if test="null != createUserid">
         and t.create_userid = #{createUserid,jdbcType=INTEGER}
      </if>
      <if test="null != addtime">
         and t.addtime = #{addtime,jdbcType=TIMESTAMP}
      </if>
      <if test="null != view">
         and t.view = #{view,jdbcType=TINYINT}
      </if>
      <if test="null != viewTime">
         and t.view_time = #{viewTime,jdbcType=TIMESTAMP}
      </if>
      <if test="null != viewUserid">
         and t.view_userid = #{viewUserid,jdbcType=INTEGER}
      </if>
      <if test="null != resolve">
         and t.resolve = #{resolve,jdbcType=BIT}
      </if>
      <if test="null != resolveTime">
         and t.resolve_time = #{resolveTime,jdbcType=TIMESTAMP}
      </if>
      <if test="null != resolveUserid">
         and t.resolve_userid = #{resolveUserid,jdbcType=INTEGER}
      </if>
      <if test="null != exceptionMsg">
         and t.exception_msg = #{exceptionMsg,jdbcType=LONGVARCHAR}
      </if>
    </trim>
  </sql>
  <select id="find" parameterType="com.jay.book.module.admin.entity.ExceptionLog" resultMap="BaseResultMap">
    select t.* from exception_log t
    <include refid="base_query" />
  </select>
  <select id="list" parameterType="com.jay.book.module.admin.entity.ExceptionLog" resultMap="BaseResultMap">
    select t.* from exception_log t
    <include refid="base_query" />
  </select>
  <select id="pageList" parameterType="com.jay.book.module.admin.entity.ExceptionLog" resultMap="BaseResultMap">
    select t.* from exception_log t
    <include refid="base_query" />
  </select>
</mapper>