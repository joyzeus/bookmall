<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igeek.admin.dao.ExceptionLogMapper">
  <resultMap id="BaseResultMap" type="com.igeek.admin.model.entity.ExceptionLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="exception_type" jdbcType="VARCHAR" property="exceptionType" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="view" jdbcType="TINYINT" property="view" />
    <result column="view_time" jdbcType="TIMESTAMP" property="viewTime" />
    <result column="view_user_id" jdbcType="INTEGER" property="viewUserId" />
    <result column="resolve" jdbcType="BIT" property="resolve" />
    <result column="resolve_time" jdbcType="TIMESTAMP" property="resolveTime" />
    <result column="resolve_user_id" jdbcType="INTEGER" property="resolveUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.igeek.admin.model.entity.ExceptionLog">
    <result column="exception_msg" jdbcType="LONGVARCHAR" property="exceptionMsg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, class_name, method_name, exception_type, ip, create_user_id, create_time, view, view_time,
    view_user_id, resolve, resolve_time, resolve_user_id
  </sql>
  <sql id="Blob_Column_List">
    exception_msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from exception_log
    where id = #{id,jdbcType=INTEGER}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exception_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.igeek.admin.model.entity.ExceptionLog">
    insert into exception_log (id, class_name, method_name, 
      exception_type, ip, create_user_id,
      create_time, view, view_time,
      view_user_id, resolve, resolve_time,
      resolve_user_id, exception_msg)
    values (#{id,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{exceptionType,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{view,jdbcType=TINYINT}, #{viewTime,jdbcType=TIMESTAMP},
      #{viewUserId,jdbcType=INTEGER}, #{resolve,jdbcType=BIT}, #{resolveTime,jdbcType=TIMESTAMP}, 
      #{resolveUserId,jdbcType=INTEGER}, #{exceptionMsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.igeek.admin.model.entity.ExceptionLog">
    insert into exception_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="exceptionType != null">
        exception_type,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="view != null">
        view,
      </if>
      <if test="viewTime != null">
        view_time,
      </if>
      <if test="viewUserId != null">
        view_user_id,
      </if>
      <if test="resolve != null">
        resolve,
      </if>
      <if test="resolveTime != null">
        resolve_time,
      </if>
      <if test="resolveUserId != null">
        resolve_user_id,
      </if>
      <if test="exceptionMsg != null">
        exception_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="exceptionType != null">
        #{exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="view != null">
        #{view,jdbcType=TINYINT},
      </if>
      <if test="viewTime != null">
        #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewUserId != null">
        #{viewUserId,jdbcType=INTEGER},
      </if>
      <if test="resolve != null">
        #{resolve,jdbcType=BIT},
      </if>
      <if test="resolveTime != null">
        #{resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolveUserId != null">
        #{resolveUserId,jdbcType=INTEGER},
      </if>
      <if test="exceptionMsg != null">
        #{exceptionMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.igeek.admin.model.entity.ExceptionLog">
    update exception_log
    <set>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="exceptionType != null">
        exception_type = #{exceptionType,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=TINYINT},
      </if>
      <if test="viewTime != null">
        view_time = #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewUserId != null">
        view_user_id = #{viewUserId,jdbcType=INTEGER},
      </if>
      <if test="resolve != null">
        resolve = #{resolve,jdbcType=BIT},
      </if>
      <if test="resolveTime != null">
        resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolveUserId != null">
        resolve_user_id = #{resolveUserId,jdbcType=INTEGER},
      </if>
      <if test="exceptionMsg != null">
        exception_msg = #{exceptionMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.igeek.admin.model.entity.ExceptionLog">
    update exception_log
    set class_name = #{className,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      exception_type = #{exceptionType,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      view = #{view,jdbcType=TINYINT},
      view_time = #{viewTime,jdbcType=TIMESTAMP},
      view_user_id = #{viewUserId,jdbcType=INTEGER},
      resolve = #{resolve,jdbcType=BIT},
      resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      resolve_user_id = #{resolveUserId,jdbcType=INTEGER},
      exception_msg = #{exceptionMsg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igeek.admin.model.entity.ExceptionLog">
    update exception_log
    set class_name = #{className,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      exception_type = #{exceptionType,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      view = #{view,jdbcType=TINYINT},
      view_time = #{viewTime,jdbcType=TIMESTAMP},
      view_user_id = #{viewUserId,jdbcType=INTEGER},
      resolve = #{resolve,jdbcType=BIT},
      resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      resolve_user_id = #{resolveUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getList" resultType="com.igeek.admin.model.entity.ExceptionLog">
    select <include refid="Base_Column_List"></include>
    from exception_log
  </select>
</mapper>